pub fn result() -> String {
    format!("{}", largest_product_in_string())
}

/*
Largest product in a series
Problem 8

The four adjacent digits in the 1000-digit number that have the
greatest product are 9 × 9 × 8 × 9 = 5832.

-- see fn for number --

Find the thirteen adjacent digits in the 1000-digit number that have the greatest product.
What is the value of this product?
*/
fn char_to_num(x: char) -> u64 {
    x as u64 - '0' as u64
}
fn product_in_string(s: &str) -> u64 {
    s.chars().fold(1, |acc, x| acc * char_to_num(x))
}
fn largest_product_in_string() -> u64 {
    /*
    strategy:
    cannot contain any zeros, this will let us skip ahead. however, it's probably not that
    expensive to do 1000 multiplication checks, and it might keep the logic simpler.
    */
    let number_str =
        "731671765313306249192251196744265747423553491949349698352031277450632623957831\
         8016984801869478851843858615607891129494954595017379583319528532088055111254069\
         8747158523863050715693290963295227443043557668966489504452445231617318564030987\
         1112172238311362229893423380308135336276614282806444486645238749303589072962904\
         9156044077239071381051585930796086670172427121883998797908792274921901699720888\
         0937766572733300105336788122023542180975125454059475224352584907711670556013604\
         8395864467063244157221553975369781797784617406495514929086256932197846862248283\
         9722413756570560574902614079729686524145351004748216637048440319989000889524345\
         0658541227588666881164271714799244429282308634656748139191231628245861786645835\
         9124566529476545682848912883142607690042242190226710556263211111093705442175069\
         4165896040807198403850962455444362981230987879927244284909188845801561660979191\
         3387549920052406368991256071760605886116467109405077541002256983155200055935729\
         72571636269561882670428252483600823257530420752963450";

    let max_start_index = number_str.len() - 13;
    (0..max_start_index).fold(0, |acc, x| {
        std::cmp::max(acc, product_in_string(&number_str[x..x + 13]))
    })
}
#[test]
fn euler_008() {
    assert_eq!(product_in_string("123"), 6);
    assert_eq!(product_in_string("7316717653133"), 5000940);
    assert_eq!(largest_product_in_string(), 23514624000);
}
